#!/usr/bin/env python

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), os.path.pardir))
import ktbh
from optparse import OptionParser
import ConfigParser

def get_config():
    config_file = os.path.join(os.path.dirname(__file__), 
			       os.path.pardir,
			       "etc", "ktbh.conf")
    config = ConfigParser.ConfigParser()
    config.read(config_file)
    return config

def run():
    config = get_config()
    parser = OptionParser()

    parser.add_option("--add-lp", dest="add_landing_page",
                      help="Add a landing page URL")
    parser.add_option("--examine-lps", dest="examine_lps",
                      action="store_true",
                      help="Process landing pages")
    parser.add_option("--stash-unscrapables", dest="stash_unscrapables",
                      action="store_true",
                      help="Save unscrapable URLs")
    parser.add_option("--infer-dialect", dest="infer_dialect",
                      action="store_true",
                      help="Infer CSV dialects")
    parser.add_option("--infer-schema", dest="infer_schema",
                      action="store_true",
                      help="Infer CSV schema")

    options, args = parser.parse_args()

    driver = ktbh.KTBH(config)
    
    if options.add_landing_page:
        driver.add_landing_page(options.add_landing_page)
        return

    if options.examine_lps:
        cb = ktbh.landing_page.examine_landing_page_callback
        driver.run_pipe("out", cb)
        return

    if options.stash_unscrapables:
        driver.stash_unscrapables()
        return

    if options.infer_dialect:
        driver.infer_dialect()
        return

    if options.infer_schema:
        driver.infer_schema()
        return

if __name__ == '__main__':
    run()
